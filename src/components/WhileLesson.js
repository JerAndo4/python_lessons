import React, { useState } from 'react';
import { Play, RotateCcw, ChevronRight, ChevronLeft, Zap, AlertCircle, Check, X, Lightbulb, Lock } from 'lucide-react';

const WhileLesson = () => {
  const [activeSection, setActiveSection] = useState(0);
  const [algoAnswer, setAlgoAnswer] = useState('');
  const [algoChecked, setAlgoChecked] = useState(false);
  const [breakDemo, setBreakDemo] = useState({ running: false, output: [] });
  const [continueDemo, setContinueDemo] = useState({ running: false, output: [] });
  const [nestedDemo, setNestedDemo] = useState({ running: false, output: [] });
  
  // –ü—Ä–∞–∫—Ç–∏–∫–∞
  const [activeTask, setActiveTask] = useState(0);
  const [userCode, setUserCode] = useState('');
  const [output, setOutput] = useState([]);
  const [testResults, setTestResults] = useState(null);
  const [attempts, setAttempts] = useState(0);
  const [solved, setSolved] = useState(false);
  const [solvedTasks, setSolvedTasks] = useState([]);
  
  const sections = [
    { id: 0, title: 'üîÑ –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ' },
    { id: 1, title: 'üõë break - –æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ü–∏–∫–ª–∞' },
    { id: 2, title: '‚è≠Ô∏è continue - –ø—Ä–æ–ø—É—Å–∫ –∏—Ç–µ—Ä–∞—Ü–∏–∏' },
    { id: 3, title: 'üéØ –§–ª–∞–≥–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è' },
    { id: 4, title: '‚ôæÔ∏è –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏–∫–ª—ã' },
    { id: 5, title: 'üîÅ –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã' },
    { id: 6, title: '‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ –æ—à–∏–±–∫–∏' },
    { id: 7, title: 'üìù –°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è' },
    { id: 8, title: 'üíª –ü—Ä–∞–∫—Ç–∏–∫–∞ —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π' }
  ];

  const tasks = [
    {
      id: 1,
      title: '–ó–∞–¥–∞—á–∞ 1: –°—á—ë—Ç—á–∏–∫',
      difficulty: '‚≠ê',
      description: '–í—ã–≤–µ–¥–∏ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 5',
      starterCode: '# –¢–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å\n',
      solution: 'counter = 1\nwhile counter <= 5:\n    print(counter)\n    counter += 1',
      tests: [{ input: null, expected: ['1', '2', '3', '4', '5'] }],
      hints: ['–ù–∞—á–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å 1', '–£—Å–ª–æ–≤–∏–µ: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è <= 5', '–ù–µ –∑–∞–±—É–¥—å —É–≤–µ–ª–∏—á–∏–≤–∞—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é += 1']
    },
    {
      id: 2,
      title: '–ó–∞–¥–∞—á–∞ 2: –û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç',
      difficulty: '‚≠ê‚≠ê',
      description: '–û–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç –æ—Ç 5 –¥–æ 1, –∑–∞—Ç–µ–º "–ü—É—Å–∫!"',
      starterCode: '# –¢–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å\n',
      solution: 'counter = 5\nwhile counter >= 1:\n    print(counter)\n    counter -= 1\nprint("–ü—É—Å–∫!")',
      tests: [{ input: null, expected: ['5', '4', '3', '2', '1', '–ü—É—Å–∫!'] }],
      hints: ['–ù–∞—á–Ω–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é —Å 5', '–ò—Å–ø–æ–ª—å–∑—É–π -= 1 –¥–ª—è —É–º–µ–Ω—å—à–µ–Ω–∏—è', '–ü–æ—Å–ª–µ —Ü–∏–∫–ª–∞ –≤—ã–≤–µ–¥–∏ "–ü—É—Å–∫!"']
    },
    {
      id: 3,
      title: '–ó–∞–¥–∞—á–∞ 3: –ü—Ä–æ–ø—É—Å–∫ —á—ë—Ç–Ω—ã—Ö',
      difficulty: '‚≠ê‚≠ê',
      description: '–í—ã–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ –Ω–µ—á—ë—Ç–Ω—ã–µ –æ—Ç 1 –¥–æ 8',
      starterCode: '# –¢–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å\n',
      solution: 'num = 0\nwhile num < 8:\n    num += 1\n    if num % 2 == 0:\n        continue\n    print(num)',
      tests: [{ input: null, expected: ['1', '3', '5', '7'] }],
      hints: ['–£–≤–µ–ª–∏—á–∏–≤–∞–π –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –ü–ï–†–ï–î continue!', '–ü—Ä–æ–≤–µ—Ä—å if –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è % 2 == 0: continue', '–£—Å–ª–æ–≤–∏–µ —Ü–∏–∫–ª–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è < 8']
    },
    {
      id: 4,
      title: '–ó–∞–¥–∞—á–∞ 4: –ü–æ–∏—Å–∫ —Å break',
      difficulty: '‚≠ê‚≠ê‚≠ê',
      description: '–ù–∞–π–¥–∏ —á–∏—Å–ª–æ 7, –≤—ã–≤–µ–¥–∏ –≤—Å–µ –¥–æ –Ω–µ–≥–æ –≤–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –∏ "–ù–∞—à–ª–∏!"',
      starterCode: '# –¢–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å\n',
      solution: 'num = 1\nwhile num <= 10:\n    print(num)\n    if num == 7:\n        print("–ù–∞—à–ª–∏!")\n        break\n    num += 1',
      tests: [{ input: null, expected: ['1', '2', '3', '4', '5', '6', '7', '–ù–∞—à–ª–∏!'] }],
      hints: ['–í—ã–≤–µ–¥–∏ —á–∏—Å–ª–æ —Å–Ω–∞—á–∞–ª–∞, –ø–æ—Ç–æ–º –ø—Ä–æ–≤–µ—Ä—è–π', '–ï—Å–ª–∏ —á–∏—Å–ª–æ == 7, –≤—ã–≤–µ–¥–∏ "–ù–∞—à–ª–∏!" –∏ break', '–ù–µ –∑–∞–±—É–¥—å —É–≤–µ–ª–∏—á–∏—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –≤ –∫–æ–Ω—Ü–µ']
    },
    {
      id: 5,
      title: '–ó–∞–¥–∞—á–∞ 5: –°—É–º–º–∞ —á–∏—Å–µ–ª',
      difficulty: '‚≠ê‚≠ê‚≠ê',
      description: '–ü–æ—Å—á–∏—Ç–∞–π —Å—É–º–º—É —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 10',
      starterCode: '# –¢–≤–æ–π –∫–æ–¥ –∑–¥–µ—Å—å\n',
      solution: 'counter = 1\ntotal = 0\nwhile counter <= 10:\n    total += counter\n    counter += 1\nprint(total)',
      tests: [{ input: null, expected: ['55'] }],
      hints: ['–ù—É–∂–Ω—ã 2 –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö: –¥–ª—è —Å—á—ë—Ç–∞ –∏ –¥–ª—è —Å—É–º–º—ã', '–í —Ü–∏–∫–ª–µ –¥–æ–±–∞–≤–ª—è–π —Å—á—ë—Ç—á–∏–∫ –∫ —Å—É–º–º–µ', 'print(—Å—É–º–º–∞) —Ç–æ–ª—å–∫–æ –ü–û–°–õ–ï —Ü–∏–∫–ª–∞']
    }
  ];

  const checkAlgoAnswer = () => {
    setAlgoChecked(true);
  };

  const runBreakDemo = () => {
    if (breakDemo.running) return;
    setBreakDemo({ running: true, output: [] });
    
    let output = [];
    let i = 1;
    const interval = setInterval(() => {
      if (i <= 10) {
        output.push(`–ß–∏—Å–ª–æ: ${i}`);
        if (i === 5) {
          output.push('‚õî –ù–∞—à–ª–∏ 5! –í—ã—Ö–æ–¥–∏–º –∏–∑ —Ü–∏–∫–ª–∞ (break)');
          setBreakDemo({ running: false, output: [...output] });
          clearInterval(interval);
        } else {
          setBreakDemo({ running: true, output: [...output] });
          i++;
        }
      }
    }, 800);
  };

  const runContinueDemo = () => {
    if (continueDemo.running) return;
    setContinueDemo({ running: true, output: [] });
    
    let output = [];
    let i = 0;
    const interval = setInterval(() => {
      if (i < 8) {
        i++;
        if (i % 2 === 0) {
          output.push(`${i} - —á—ë—Ç–Ω–æ–µ, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º (continue)`);
        } else {
          output.push(`${i} - –Ω–µ—á—ë—Ç–Ω–æ–µ, –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º ‚úì`);
        }
        setContinueDemo({ running: true, output: [...output] });
      } else {
        setContinueDemo({ running: false, output: [...output] });
        clearInterval(interval);
      }
    }, 700);
  };

  const runNestedDemo = () => {
    if (nestedDemo.running) return;
    setNestedDemo({ running: true, output: [] });
    
    let output = [];
    let row = 1;
    let col = 1;
    
    const interval = setInterval(() => {
      if (row <= 3) {
        if (col <= 3) {
          output.push(`–°—Ç—Ä–æ–∫–∞ ${row}, –°—Ç–æ–ª–±–µ—Ü ${col}: ‚≠ê`);
          setNestedDemo({ running: true, output: [...output] });
          col++;
        } else {
          col = 1;
          row++;
        }
      } else {
        setNestedDemo({ running: false, output: [...output] });
        clearInterval(interval);
      }
    }, 600);
  };

  // –ü—Ä–∞–∫—Ç–∏–∫–∞
  const handleKeyDown = (e) => {
    if (e.key === 'Tab') {
      e.preventDefault();
      const start = e.target.selectionStart;
      const end = e.target.selectionEnd;
      const newValue = userCode.substring(0, start) + '    ' + userCode.substring(end);
      setUserCode(newValue);
      setTimeout(() => {
        e.target.selectionStart = e.target.selectionEnd = start + 4;
      }, 0);
    }
  };

  const runCode = () => {
    const task = tasks[activeTask];
    const codeLines = userCode.split('\n');
    const outputLines = [];
    let passed = false;

    try {
      const variables = {};
      let lineIndex = 0;

      while (lineIndex < codeLines.length) {
        let line = codeLines[lineIndex].trim();
        
        if (!line || line.startsWith('#')) {
          lineIndex++;
          continue;
        }

        const assignMatch = line.match(/^(\w+)\s*=\s*(.+)$/);
        if (assignMatch) {
          const varName = assignMatch[1];
          const value = assignMatch[2].trim();
          
          if (value.match(/^\d+$/)) {
            variables[varName] = parseInt(value);
          } else if (value.includes('+') || value.includes('-') || value.includes('*') || value.includes('/')) {
            const parts = value.split(/([+\-*/])/);
            let result = variables[parts[0].trim()] || parseInt(parts[0].trim()) || 0;
            for (let i = 1; i < parts.length; i += 2) {
              const op = parts[i];
              const nextVal = variables[parts[i+1].trim()] || parseInt(parts[i+1].trim()) || 0;
              if (op === '+') result += nextVal;
              if (op === '-') result -= nextVal;
              if (op === '*') result *= nextVal;
              if (op === '/') result = Math.floor(result / nextVal);
            }
            variables[varName] = result;
          } else if (value.startsWith('"') || value.startsWith("'")) {
            variables[varName] = value.replace(/['"]/g, '');
          }
          lineIndex++;
          continue;
        }

        const printMatch = line.match(/^print\((.+)\)$/);
        if (printMatch) {
          const content = printMatch[1].trim();
          if (content.startsWith('"') || content.startsWith("'")) {
            outputLines.push(content.replace(/['"]/g, ''));
          } else if (variables[content] !== undefined) {
            outputLines.push(String(variables[content]));
          }
          lineIndex++;
          continue;
        }

        const whileMatch = line.match(/^while\s+(.+):$/);
        if (whileMatch) {
          const condition = whileMatch[1];
          let whileBody = [];
          lineIndex++;
          
          while (lineIndex < codeLines.length && (codeLines[lineIndex].startsWith('    ') || codeLines[lineIndex].trim() === '')) {
            if (codeLines[lineIndex].trim()) {
              whileBody.push(codeLines[lineIndex].replace(/^    /, ''));
            }
            lineIndex++;
          }

          let iterations = 0;
          while (iterations < 100 && evaluateCondition(condition, variables)) {
            let bodyIndex = 0;
            let shouldBreak = false;

            while (bodyIndex < whileBody.length && !shouldBreak) {
              let bodyLine = whileBody[bodyIndex].trim();
              
              if (bodyLine === 'continue') {
                break;
              }
              if (bodyLine === 'break') {
                shouldBreak = true;
                break;
              }

              const bodyAssign = bodyLine.match(/^(\w+)\s*([+\-*/]?)=\s*(.+)$/);
              if (bodyAssign) {
                const varName = bodyAssign[1];
                const op = bodyAssign[2];
                const value = bodyAssign[3].trim();
                
                if (op === '+') {
                  variables[varName] = (variables[varName] || 0) + (variables[value] || parseInt(value) || 0);
                } else if (op === '-') {
                  variables[varName] = (variables[varName] || 0) - (variables[value] || parseInt(value) || 0);
                } else {
                  variables[varName] = variables[value] || parseInt(value) || 0;
                }
              }

              const bodyPrint = bodyLine.match(/^print\((.+)\)$/);
              if (bodyPrint) {
                const content = bodyPrint[1].trim();
                if (content.startsWith('"') || content.startsWith("'")) {
                  outputLines.push(content.replace(/['"]/g, ''));
                } else if (variables[content] !== undefined) {
                  outputLines.push(String(variables[content]));
                }
              }

              const ifMatch = bodyLine.match(/^if\s+(.+):$/);
              if (ifMatch) {
                const ifCondition = ifMatch[1];
                bodyIndex++;
                if (evaluateCondition(ifCondition, variables)) {
                  while (bodyIndex < whileBody.length && whileBody[bodyIndex].startsWith('    ')) {
                    const ifLine = whileBody[bodyIndex].trim();
                    if (ifLine === 'break') {
                      shouldBreak = true;
                      break;
                    }
                    if (ifLine === 'continue') {
                      break;
                    }
                    const ifPrint = ifLine.match(/^print\((.+)\)$/);
                    if (ifPrint) {
                      const content = ifPrint[1].trim();
                      if (content.startsWith('"') || content.startsWith("'")) {
                        outputLines.push(content.replace(/['"]/g, ''));
                      }
                    }
                    bodyIndex++;
                  }
                } else {
                  while (bodyIndex < whileBody.length && whileBody[bodyIndex].startsWith('    ')) {
                    bodyIndex++;
                  }
                }
                continue;
              }

              bodyIndex++;
            }

            if (shouldBreak) break;
            iterations++;
          }
          continue;
        }

        lineIndex++;
      }

      setOutput(outputLines);
      
      const expected = task.tests[0].expected;
      passed = JSON.stringify(outputLines) === JSON.stringify(expected);
      
      if (!passed) {
        setAttempts(attempts + 1);
      } else {
        setSolved(true);
      }
      if (!solvedTasks.includes(activeTask)) {
          setSolvedTasks([...solvedTasks, activeTask]);
      }
      
      setTestResults({ passed, expected, output: outputLines });

    } catch (error) {
      setOutput([`–û—à–∏–±–∫–∞: ${error.message}`]);
      setTestResults({ passed: false, error: error.message });
      setAttempts(attempts + 1);
    }
  };

  const evaluateCondition = (condition, variables) => {
    const match = condition.match(/(\w+)\s*([<>=!]+)\s*(\w+|\d+)/);
    if (!match) return false;
    
    const left = variables[match[1]] !== undefined ? variables[match[1]] : parseInt(match[1]);
    const operator = match[2];
    const right = variables[match[3]] !== undefined ? variables[match[3]] : parseInt(match[3]);
    
    switch(operator) {
      case '<': return left < right;
      case '>': return left > right;
      case '<=': return left <= right;
      case '>=': return left >= right;
      case '==': return left === right;
      case '!=': return left !== right;
      default: return false;
    }
  };

  const resetTask = () => {
    setUserCode(tasks[activeTask].starterCode);
    setOutput([]);
    setTestResults(null);
  };

  const changeTask = (index) => {
    setActiveTask(index);
    setUserCode(tasks[index].starterCode);
    setOutput([]);
    setTestResults(null);
    setAttempts(0);
    setSolved(false);
  };

  const showSolution = () => {
    setUserCode(tasks[activeTask].solution);
    setOutput([]);
    setTestResults(null);
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6">
      <div className="max-w-6xl mx-auto">
        <div className="bg-white rounded-2xl shadow-lg p-6 mb-6">
          <h1 className="text-3xl font-bold text-center text-purple-600">
            üîÑ –¶–∏–∫–ª WHILE - –£–≥–ª—É–±–ª—ë–Ω–Ω–æ–µ –∏–∑—É—á–µ–Ω–∏–µ
          </h1>
        </div>

        <div className="bg-white rounded-2xl shadow-lg p-4 mb-6">
          <div className="flex gap-2 overflow-x-auto pb-2">
            {sections.map((section) => (
              <button
                key={section.id}
                onClick={() => setActiveSection(section.id)}
                className={`px-4 py-2 rounded-lg whitespace-nowrap transition ${
                  activeSection === section.id
                    ? 'bg-purple-600 text-white'
                    : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
                }`}
              >
                {section.title}
              </button>
            ))}
          </div>
        </div>

        <div className="bg-white rounded-2xl shadow-lg p-8">
          
          {/* –°–µ–∫—Ü–∏—è 0: –ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ */}
          {activeSection === 0 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">üîÑ –ë—ã—Å—Ç—Ä–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ</h2>
              
              <div className="space-y-6">
                <div className="bg-purple-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-purple-700 mb-4">–ß—Ç–æ —Ç–∞–∫–æ–µ while?</h3>
                  <p className="text-gray-700 text-lg leading-relaxed">
                    <strong>while</strong> - —ç—Ç–æ —Ü–∏–∫–ª, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–≤—Ç–æ—Ä—è–µ—Ç –∫–æ–¥ <strong>–ü–û–ö–ê</strong> —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ (True).
                  </p>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm mt-4">
                    <div className="text-green-400"># –ë–∞–∑–æ–≤–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞</div>
                    <div><span className="text-blue-300">while</span> condition:</div>
                    <div className="ml-4 text-gray-300"># –∫–æ–¥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–∫–∞ condition = True</div>
                    <div className="ml-4">do_something()</div>
                  </div>
                </div>

                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-4">–û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã:</h3>
                  <div className="space-y-3">
                    <div className="bg-white p-4 rounded-lg">
                      <strong className="text-blue-600">1. –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è</strong> - —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ
                      <div className="bg-gray-900 text-white p-2 rounded font-mono text-sm mt-2">
                        counter = 1  <span className="text-gray-400"># –Ω–∞—á–∞–ª–æ</span>
                      </div>
                    </div>
                    <div className="bg-white p-4 rounded-lg">
                      <strong className="text-blue-600">2. –£—Å–ª–æ–≤–∏–µ</strong> - –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–¥ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–µ–π
                      <div className="bg-gray-900 text-white p-2 rounded font-mono text-sm mt-2">
                        <span className="text-blue-300">while</span> counter {'<='} 10:  <span className="text-gray-400"># —É—Å–ª–æ–≤–∏–µ</span>
                      </div>
                    </div>
                    <div className="bg-white p-4 rounded-lg">
                      <strong className="text-blue-600">3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ</strong> - –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç/–¥–µ–∫—Ä–µ–º–µ–Ω—Ç (–∏–Ω–∞—á–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª!)
                      <div className="bg-gray-900 text-white p-2 rounded font-mono text-sm mt-2">
                        counter += 1  <span className="text-gray-400"># –∏–∑–º–µ–Ω—è–µ–º</span>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-yellow-50 p-6 rounded-xl border-2 border-yellow-300">
                  <h3 className="text-xl font-bold text-yellow-700 mb-4">üß† –ó–∞–¥–∞—á–∞ –Ω–∞ –ø–æ–Ω–∏–º–∞–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∞</h3>
                  <p className="text-gray-700 mb-4">–ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –∫–æ–¥ –∏ –æ—Ç–≤–µ—Ç—å: <strong>—á—Ç–æ –≤—ã–≤–µ–¥–µ—Ç—Å—è –Ω–∞ —ç–∫—Ä–∞–Ω?</strong></p>
                  
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm mb-4">
                    <div>number = 10</div>
                    <div>total = 0</div>
                    <div className="mt-2"><span className="text-blue-300">while</span> number {'>'} 0:</div>
                    <div className="ml-4">total = total + number</div>
                    <div className="ml-4">number = number - 2</div>
                    <div className="mt-2"><span className="text-purple-300">print</span>(total)</div>
                  </div>

                  <div className="space-y-3">
                    <input
                      type="text"
                      value={algoAnswer}
                      onChange={(e) => setAlgoAnswer(e.target.value)}
                      placeholder="–¢–≤–æ–π –æ—Ç–≤–µ—Ç..."
                      className="border-2 border-yellow-300 rounded-lg px-4 py-2 w-full"
                    />
                    <button
                      onClick={checkAlgoAnswer}
                      className="bg-yellow-500 text-white px-6 py-2 rounded-lg font-bold"
                    >
                      –ü—Ä–æ–≤–µ—Ä–∏—Ç—å
                    </button>
                    
                    {algoChecked && (
                      <div className="mt-4 p-4 bg-white rounded-lg">
                        <strong className="text-green-600">‚úì –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: 30</strong>
                        <div className="mt-3 text-gray-700">
                          <strong>–†–∞–∑–±–æ—Ä –∞–ª–≥–æ—Ä–∏—Ç–º–∞:</strong>
                          <div className="mt-2 space-y-1 text-sm">
                            <div>‚Ä¢ –ò—Ç–µ—Ä–∞—Ü–∏—è 1: number=10, total=0+10=10, number=10-2=8</div>
                            <div>‚Ä¢ –ò—Ç–µ—Ä–∞—Ü–∏—è 2: number=8, total=10+8=18, number=8-2=6</div>
                            <div>‚Ä¢ –ò—Ç–µ—Ä–∞—Ü–∏—è 3: number=6, total=18+6=24, number=6-2=4</div>
                            <div>‚Ä¢ –ò—Ç–µ—Ä–∞—Ü–∏—è 4: number=4, total=24+4=28, number=4-2=2</div>
                            <div>‚Ä¢ –ò—Ç–µ—Ä–∞—Ü–∏—è 5: number=2, total=28+2=30, number=2-2=0</div>
                            <div>‚Ä¢ number=0, —É—Å–ª–æ–≤–∏–µ number {'>'} 0 = False ‚Üí –≤—ã—Ö–æ–¥</div>
                            <div className="mt-2 font-bold text-purple-600">–ò—Ç–æ–≥–æ: 10+8+6+4+2 = 30</div>
                          </div>
                        </div>
                      </div>
                    )}
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 1: break */}
          {activeSection === 1 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">üõë –û–ø–µ—Ä–∞—Ç–æ—Ä break</h2>
              
              <div className="space-y-6">
                <div className="bg-red-50 p-6 rounded-xl">
                  <h3 className="text-2xl font-bold text-red-700 mb-4">–ß—Ç–æ —Ç–∞–∫–æ–µ break?</h3>
                  <p className="text-lg text-gray-700">
                    <strong>break</strong> - –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç —Ü–∏–∫–ª –∏ –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ –Ω–µ–≥–æ, –¥–∞–∂–µ –µ—Å–ª–∏ —É—Å–ª–æ–≤–∏–µ –µ—â—ë True.
                  </p>
                  <div className="bg-white p-4 rounded-lg mt-4">
                    <p className="text-gray-600">üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ –Ω–∞—à—ë–ª —Ç–æ, —á—Ç–æ –∏—Å–∫–∞–ª, –∏ –¥–∞–ª—å–Ω–µ–π—à–∏–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–µ –Ω—É–∂–Ω—ã.</p>
                  </div>
                </div>

                <div className="bg-white border-4 border-red-300 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-red-700 mb-4">üìã –°–∏–Ω—Ç–∞–∫—Å–∏—Å:</h3>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm">
                    <div><span className="text-blue-300">while</span> condition:</div>
                    <div className="ml-4"><span className="text-blue-300">if</span> special_condition:</div>
                    <div className="ml-8 text-red-400">break  <span className="text-gray-400"># –≤—ã—Ö–æ–¥ –∏–∑ —Ü–∏–∫–ª–∞</span></div>
                    <div className="ml-4">do_something()</div>
                  </div>
                </div>

                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-4">üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è:</h3>
                  <p className="text-gray-700 mb-4">–ò—â–µ–º —á–∏—Å–ª–æ 5 —Å—Ä–µ–¥–∏ —á–∏—Å–µ–ª –æ—Ç 1 –¥–æ 10. –ö–∞–∫ —Ç–æ–ª—å–∫–æ –Ω–∞—Ö–æ–¥–∏–º - —Å—Ä–∞–∑—É –≤—ã—Ö–æ–¥–∏–º!</p>
                  
                  <div className="bg-white p-6 rounded-lg">
                    <button
                      onClick={runBreakDemo}
                      disabled={breakDemo.running}
                      className="bg-red-500 text-white px-6 py-3 rounded-lg font-bold flex items-center gap-2 disabled:bg-gray-300 mb-4"
                    >
                      <Play size={20} />
                      –ó–∞–ø—É—Å—Ç–∏—Ç—å –ø–æ–∏—Å–∫
                    </button>
                    
                    <div className="bg-gray-50 p-4 rounded-lg min-h-32 max-h-64 overflow-y-auto">
                      {breakDemo.output.length === 0 ? (
                        <p className="text-gray-400 text-center">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞</p>
                      ) : (
                        breakDemo.output.map((line, i) => (
                          <div key={i} className={`mb-1 ${line.includes('break') ? 'font-bold text-red-600' : 'text-gray-700'}`}>
                            {line}
                          </div>
                        ))
                      )}
                    </div>
                  </div>

                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm mt-4">
                    <div>i = 1</div>
                    <div><span className="text-blue-300">while</span> i {'<='} 10:</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"–ß–∏—Å–ª–æ: {'{i}'}"</span>)</div>
                    <div className="ml-4"><span className="text-blue-300">if</span> i == 5:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ù–∞—à–ª–∏ 5! –í—ã—Ö–æ–¥–∏–º"</span>)</div>
                    <div className="ml-8 text-red-400">break  <span className="text-gray-400"># —Ü–∏–∫–ª –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è</span></div>
                    <div className="ml-4">i += 1</div>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-4">üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:</h3>
                  <div className="space-y-3">
                    <div className="bg-white p-4 rounded-lg">
                      <strong>1. –ü–æ–∏—Å–∫ –≤ —Å–ø–∏—Å–∫–µ</strong>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm mt-2">
                        <div>found = <span className="text-blue-300">False</span></div>
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(names):</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> names[i] == <span className="text-yellow-300">"Alice"</span>:</div>
                        <div className="ml-8">found = <span className="text-blue-300">True</span></div>
                        <div className="ml-8 text-red-400">break</div>
                        <div className="ml-4">i += 1</div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <strong>2. –í–∞–ª–∏–¥–∞—Ü–∏—è –≤–≤–æ–¥–∞ —Å –≤—ã—Ö–æ–¥–æ–º</strong>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm mt-2">
                        <div><span className="text-blue-300">while</span> <span className="text-blue-300">True</span>:</div>
                        <div className="ml-4">password = <span className="text-purple-300">input</span>(<span className="text-yellow-300">"Password: "</span>)</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> password == <span className="text-yellow-300">"exit"</span>:</div>
                        <div className="ml-8 text-red-400">break  <span className="text-gray-400"># –≤—ã—Ö–æ–¥ –ø–æ –∫–æ–º–∞–Ω–¥–µ</span></div>
                        <div className="ml-4"><span className="text-blue-300">if</span> <span className="text-purple-300">len</span>(password) {'>'} 8:</div>
                        <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"Good!"</span>)</div>
                        <div className="ml-8 text-red-400">break</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 2: continue */}
          {activeSection === 2 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">‚è≠Ô∏è –û–ø–µ—Ä–∞—Ç–æ—Ä continue</h2>
              
              <div className="space-y-6">
                <div className="bg-yellow-50 p-6 rounded-xl">
                  <h3 className="text-2xl font-bold text-yellow-700 mb-4">–ß—Ç–æ —Ç–∞–∫–æ–µ continue?</h3>
                  <p className="text-lg text-gray-700">
                    <strong>continue</strong> - –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç –æ—Å—Ç–∞—Ç–æ–∫ —Ç–µ–∫—É—â–µ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç –∫ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–µ —É—Å–ª–æ–≤–∏—è.
                  </p>
                  <div className="bg-white p-4 rounded-lg mt-4">
                    <p className="text-gray-600">üí° –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–≥–¥–∞ –Ω—É–∂–Ω–æ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã, –Ω–æ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ü–∏–∫–ª.</p>
                  </div>
                </div>

                <div className="bg-white border-4 border-yellow-300 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-yellow-700 mb-4">üîÑ –†–∞–∑–Ω–∏—Ü–∞ break vs continue:</h3>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="bg-red-50 p-4 rounded-lg">
                      <div className="text-2xl mb-2 text-red-600">üõë</div>
                      <strong className="text-red-700">break</strong>
                      <div className="text-sm text-gray-600 mt-2">–ü–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã—Ö–æ–¥–∏—Ç –∏–∑ —Ü–∏–∫–ª–∞</div>
                      <div className="text-sm text-gray-600">–¶–∏–∫–ª –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è</div>
                    </div>
                    <div className="bg-yellow-50 p-4 rounded-lg">
                      <div className="text-2xl mb-2 text-yellow-600">‚è≠Ô∏è</div>
                      <strong className="text-yellow-700">continue</strong>
                      <div className="text-sm text-gray-600 mt-2">–ü—Ä–æ–ø—É—Å–∫–∞–µ—Ç —Ç–µ–∫—É—â—É—é –∏—Ç–µ—Ä–∞—Ü–∏—é</div>
                      <div className="text-sm text-gray-600">–¶–∏–∫–ª –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è</div>
                    </div>
                  </div>
                </div>

                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-4">üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è:</h3>
                  <p className="text-gray-700 mb-4">–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ—á—ë—Ç–Ω—ã–µ —á–∏—Å–ª–∞ –æ—Ç 1 –¥–æ 8, —á—ë—Ç–Ω—ã–µ –ø—Ä–æ–ø—É—Å–∫–∞–µ–º.</p>
                  
                  <div className="bg-white p-6 rounded-lg">
                    <button
                      onClick={runContinueDemo}
                      disabled={continueDemo.running}
                      className="bg-yellow-500 text-white px-6 py-3 rounded-lg font-bold flex items-center gap-2 disabled:bg-gray-300 mb-4"
                    >
                      <Play size={20} />
                      –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—é
                    </button>
                    
                    <div className="bg-gray-50 p-4 rounded-lg min-h-32 max-h-64 overflow-y-auto">
                      {continueDemo.output.length === 0 ? (
                        <p className="text-gray-400 text-center">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞</p>
                      ) : (
                        continueDemo.output.map((line, i) => (
                          <div key={i} className={`mb-1 ${line.includes('continue') ? 'text-yellow-600' : line.includes('‚úì') ? 'font-bold text-green-600' : 'text-gray-700'}`}>
                            {line}
                          </div>
                        ))
                      )}
                    </div>
                  </div>

                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm mt-4">
                    <div>i = 0</div>
                    <div><span className="text-blue-300">while</span> i {'<'} 8:</div>
                    <div className="ml-4">i += 1</div>
                    <div className="ml-4"><span className="text-blue-300">if</span> i % 2 == 0:  <span className="text-gray-400"># –µ—Å–ª–∏ —á—ë—Ç–Ω–æ–µ</span></div>
                    <div className="ml-8 text-yellow-400">continue  <span className="text-gray-400"># –ø—Ä–æ–ø—É—Å–∫–∞–µ–º</span></div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"{'{i}'} - –Ω–µ—á—ë—Ç–Ω–æ–µ"</span>)</div>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-4">üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã:</h3>
                  <div className="space-y-3">
                    <div className="bg-white p-4 rounded-lg">
                      <strong>1. –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</strong>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm mt-2">
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(students):</div>
                        <div className="ml-4">student = students[i]</div>
                        <div className="ml-4">i += 1</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> student.grade {'<'} 50:</div>
                        <div className="ml-8 text-yellow-400">continue  <span className="text-gray-400"># –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –Ω–µ—É—Å–ø–µ–≤–∞—é—â–∏—Ö</span></div>
                        <div className="ml-4"><span className="text-purple-300">print</span>(student.name)</div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <strong>2. –ü—Ä–æ–ø—É—Å–∫ –æ—à–∏–±–æ—á–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö</strong>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm mt-2">
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(numbers):</div>
                        <div className="ml-4">num = numbers[i]</div>
                        <div className="ml-4">i += 1</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> num == 0:</div>
                        <div className="ml-8 text-yellow-400">continue  <span className="text-gray-400"># –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ 0</span></div>
                        <div className="ml-4">result = 100 / num</div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-red-50 p-6 rounded-xl border-2 border-red-300">
                  <h3 className="text-xl font-bold text-red-700 mb-3 flex items-center gap-2">
                    <AlertCircle size={24} />
                    –í–ê–ñ–ù–û: –ø–æ–∑–∏—Ü–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞!
                  </h3>
                  <p className="text-gray-700 mb-4">
                    –ü—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ <code className="bg-red-200 px-2 py-1 rounded">continue</code> —Å–ª–µ–¥–∏, —á—Ç–æ–±—ã –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç –±—ã–ª <strong>–ü–ï–†–ï–î</strong> continue, –∏–Ω–∞—á–µ –ø–æ–ª—É—á–∏—à—å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª!
                  </p>
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <div className="text-red-600 font-bold mb-2">‚ùå –ù–ï–ü–†–ê–í–ò–õ–¨–ù–û:</div>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> i % 2 == 0:</div>
                        <div className="ml-8 text-yellow-400">continue</div>
                        <div className="ml-4 text-red-400">i += 1  # –Ω–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è!</div>
                      </div>
                    </div>
                    <div>
                      <div className="text-green-600 font-bold mb-2">‚úì –ü–†–ê–í–ò–õ–¨–ù–û:</div>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                        <div className="ml-4 text-green-400">i += 1  # —Å–Ω–∞—á–∞–ª–∞!</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> i % 2 == 0:</div>
                        <div className="ml-8 text-yellow-400">continue</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 3: –§–ª–∞–≥–∏ */}
          {activeSection === 3 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">üéØ –§–ª–∞–≥–∏ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è</h2>
              
              <div className="space-y-6">
                <div className="bg-purple-50 p-6 rounded-xl">
                  <h3 className="text-2xl font-bold text-purple-700 mb-4">–ß—Ç–æ —Ç–∞–∫–æ–µ —Ñ–ª–∞–≥?</h3>
                  <p className="text-lg text-gray-700 mb-3">
                    <strong>–§–ª–∞–≥</strong> - —ç—Ç–æ –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è —Ç–∏–ø–∞ bool (True/False), –∫–æ—Ç–æ—Ä–∞—è —Ö—Ä–∞–Ω–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ü–∏–∫–ª–æ–º.
                  </p>
                  <p className="text-gray-600">
                    –§–ª–∞–≥–∏ –¥–µ–ª–∞—é—Ç –∫–æ–¥ –ø–æ–Ω—è—Ç–Ω–µ–µ –∏ –ø–æ–∑–≤–æ–ª—è—é—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å —Ü–∏–∫–ª–æ–º –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–±—ã—Ç–∏–π, –∞ –Ω–µ —Ç–æ–ª—å–∫–æ —Å—á—ë—Ç—á–∏–∫–æ–≤.
                  </p>
                </div>

                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-4">üìã –ë–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä —Å —Ñ–ª–∞–≥–æ–º:</h3>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm">
                    <div className="text-green-400"># –ü–æ–∏—Å–∫ —Å —Ñ–ª–∞–≥–æ–º</div>
                    <div>found = <span className="text-blue-300">False</span>  <span className="text-gray-400"># —Ñ–ª–∞–≥</span></div>
                    <div>i = 0</div>
                    <div className="mt-2"><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(items) <span className="text-blue-300">and not</span> found:</div>
                    <div className="ml-4"><span className="text-blue-300">if</span> items[i] == target:</div>
                    <div className="ml-8">found = <span className="text-blue-300">True</span>  <span className="text-gray-400"># –º–µ–Ω—è–µ–º —Ñ–ª–∞–≥</span></div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"–ù–∞—à–ª–∏ –Ω–∞ –ø–æ–∑–∏—Ü–∏–∏ {'{i}'}"</span>)</div>
                    <div className="ml-4">i += 1</div>
                    <div className="mt-2"><span className="text-blue-300">if not</span> found:</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ù–µ –Ω–∞–π–¥–µ–Ω–æ"</span>)</div>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-4">üéÆ –ü—Ä–∏–º–µ—Ä: –∏–≥—Ä–æ–≤–æ–π —Ü–∏–∫–ª</h3>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm">
                    <div className="text-green-400"># –ò–≥—Ä–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏ –≤—ã—Ö–æ–¥–∞</div>
                    <div>game_running = <span className="text-blue-300">True</span></div>
                    <div>player_hp = 100</div>
                    <div>level = 1</div>
                    <div className="mt-2"><span className="text-blue-300">while</span> game_running:</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"Level {'{level}'}, HP: {'{player_hp}'}"</span>)</div>
                    <div className="ml-4">action = <span className="text-purple-300">input</span>(<span className="text-yellow-300">"–ß—Ç–æ –¥–µ–ª–∞–µ–º? "</span>)</div>
                    <div className="ml-4 mt-2"><span className="text-blue-300">if</span> action == <span className="text-yellow-300">"quit"</span>:</div>
                    <div className="ml-8">game_running = <span className="text-blue-300">False</span>  <span className="text-gray-400"># –≤—ã—Ö–æ–¥</span></div>
                    <div className="ml-4"><span className="text-blue-300">elif</span> action == <span className="text-yellow-300">"fight"</span>:</div>
                    <div className="ml-8">player_hp -= 20</div>
                    <div className="ml-8"><span className="text-blue-300">if</span> player_hp {'<='} 0:</div>
                    <div className="ml-12"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"Game Over!"</span>)</div>
                    <div className="ml-12">game_running = <span className="text-blue-300">False</span></div>
                    <div className="ml-4"><span className="text-blue-300">elif</span> action == <span className="text-yellow-300">"heal"</span>:</div>
                    <div className="ml-8">player_hp = 100</div>
                  </div>
                </div>

                <div className="bg-yellow-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-yellow-700 mb-4">üîÑ –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —Ñ–ª–∞–≥–∏:</h3>
                  <p className="text-gray-700 mb-4">–ú–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ —Ñ–ª–∞–≥–æ–≤ –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ –¥–ª—è —Å–ª–æ–∂–Ω–æ–π –ª–æ–≥–∏–∫–∏:</p>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm">
                    <div className="text-green-400"># –°–∏—Å—Ç–µ–º–∞ —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ —É—Å–ª–æ–≤–∏—è–º–∏</div>
                    <div>authenticated = <span className="text-blue-300">False</span></div>
                    <div>verified = <span className="text-blue-300">False</span></div>
                    <div>attempts = 0</div>
                    <div>max_attempts = 3</div>
                    <div className="mt-2"><span className="text-blue-300">while not</span> authenticated <span className="text-blue-300">and</span> attempts {'<'} max_attempts:</div>
                    <div className="ml-4">password = <span className="text-purple-300">input</span>(<span className="text-yellow-300">"–ü–∞—Ä–æ–ª—å: "</span>)</div>
                    <div className="ml-4 mt-2"><span className="text-blue-300">if</span> password == <span className="text-yellow-300">"secret"</span>:</div>
                    <div className="ml-8">authenticated = <span className="text-blue-300">True</span></div>
                    <div className="ml-8">code = <span className="text-purple-300">input</span>(<span className="text-yellow-300">"2FA –∫–æ–¥: "</span>)</div>
                    <div className="ml-8"><span className="text-blue-300">if</span> code == <span className="text-yellow-300">"1234"</span>:</div>
                    <div className="ml-12">verified = <span className="text-blue-300">True</span></div>
                    <div className="ml-4"><span className="text-blue-300">else</span>:</div>
                    <div className="ml-8">attempts += 1</div>
                    <div className="mt-2"><span className="text-blue-300">if</span> authenticated <span className="text-blue-300">and</span> verified:</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–î–æ—Å—Ç—É–ø —Ä–∞–∑—Ä–µ—à—ë–Ω!"</span>)</div>
                    <div><span className="text-blue-300">else</span>:</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω"</span>)</div>
                  </div>
                </div>

                <div className="bg-white border-4 border-purple-300 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-purple-700 mb-4">üí° –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–ª–∞–≥–∏?</h3>
                  <div className="space-y-3">
                    <div className="bg-purple-50 p-4 rounded-lg">
                      <strong>‚úì –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º –ø—Ä–æ–≥—Ä–∞–º–º—ã</strong>
                      <div className="text-sm text-gray-600 mt-1">–ò–≥—Ä–∞ –∏–¥—ë—Ç / –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ / –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞</div>
                    </div>
                    <div className="bg-purple-50 p-4 rounded-lg">
                      <strong>‚úì –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–æ–≤</strong>
                      <div className="text-sm text-gray-600 mt-1">–ù–∞—à–ª–∏ / –Ω–µ –Ω–∞—à–ª–∏ –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç</div>
                    </div>
                    <div className="bg-purple-50 p-4 rounded-lg">
                      <strong>‚úì –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö</strong>
                      <div className="text-sm text-gray-600 mt-1">–î–∞–Ω–Ω—ã–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã / –µ—Å—Ç—å –æ—à–∏–±–∫–∏</div>
                    </div>
                    <div className="bg-purple-50 p-4 rounded-lg">
                      <strong>‚úì –ú–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ —É—Å–ª–æ–≤–∏—è –≤—ã—Ö–æ–¥–∞</strong>
                      <div className="text-sm text-gray-600 mt-1">–¢–∞–π–º–∞—É—Ç / —É—Å–ø–µ—Ö / –æ—Ç–º–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 4: –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏–∫–ª—ã */}
          {activeSection === 4 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">‚ôæÔ∏è –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏–∫–ª—ã</h2>
              
              <div className="space-y-6">
                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-2xl font-bold text-blue-700 mb-4">–ß—Ç–æ —Ç–∞–∫–æ–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª?</h3>
                  <p className="text-lg text-gray-700 mb-3">
                    –¶–∏–∫–ª, —É—Å–ª–æ–≤–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ <strong>–≤—Å–µ–≥–¥–∞ True</strong>. –û–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ –Ω–µ –≤—Å—Ç—Ä–µ—Ç–∏—Ç <code className="bg-blue-200 px-2 py-1 rounded">break</code>.
                  </p>
                  <div className="bg-white p-4 rounded-lg">
                    <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                      <div><span className="text-blue-300">while</span> <span className="text-blue-300">True</span>:  <span className="text-gray-400"># —É—Å–ª–æ–≤–∏–µ –≤—Å–µ–≥–¥–∞ –∏—Å—Ç–∏–Ω–Ω–æ</span></div>
                      <div className="ml-4"><span className="text-gray-400"># –∫–æ–¥ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è –≤–µ—á–Ω–æ</span></div>
                      <div className="ml-4"><span className="text-blue-300">if</span> exit_condition:</div>
                      <div className="ml-8 text-red-400">break  <span className="text-gray-400"># –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π –≤—ã—Ö–æ–¥</span></div>
                    </div>
                  </div>
                </div>

                <div className="bg-yellow-50 p-6 rounded-xl border-2 border-yellow-400">
                  <h3 className="text-xl font-bold text-yellow-700 mb-4 flex items-center gap-2">
                    <Zap size={24} />
                    –ö–æ–≥–¥–∞ —ç—Ç–æ –ø–æ–ª–µ–∑–Ω–æ?
                  </h3>
                  <div className="space-y-3">
                    <div className="bg-white p-4 rounded-lg">
                      <strong>1. –ö–æ–≥–¥–∞ —É—Å–ª–æ–≤–∏–µ –≤—ã—Ö–æ–¥–∞ –≤–Ω—É—Ç—Ä–∏ —Ü–∏–∫–ª–∞</strong>
                      <div className="text-sm text-gray-600 mt-2">–ü—Ä–æ—â–µ –Ω–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥–∏–∫—É –≤—ã—Ö–æ–¥–∞ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ</div>
                    </div>
                    <div className="bg-white p-4 rounded-lg">
                      <strong>2. –°–µ—Ä–≤–µ—Ä—ã –∏ –ø—Ä–æ–≥—Ä–∞–º–º—ã —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏</strong>
                      <div className="text-sm text-gray-600 mt-2">–ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–æ–ª–∂–Ω–∞ —Ä–∞–±–æ—Ç–∞—Ç—å –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏</div>
                    </div>
                    <div className="bg-white p-4 rounded-lg">
                      <strong>3. –ú–µ–Ω—é –∏ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—ã</strong>
                      <div className="text-sm text-gray-600 mt-2">–ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±–µ—Ä–µ—Ç "–≤—ã—Ö–æ–¥"</div>
                    </div>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-4">üìã –ü—Ä–∏–º–µ—Ä: –ú–µ–Ω—é –ø—Ä–æ–≥—Ä–∞–º–º—ã</h3>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm">
                    <div className="text-green-400"># –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —Å –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–º —Ü–∏–∫–ª–æ–º</div>
                    <div><span className="text-blue-300">while</span> <span className="text-blue-300">True</span>:</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"\n=== –ú–ï–ù–Æ ==="</span>)</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"1. –ù–æ–≤–∞—è –∏–≥—Ä–∞"</span>)</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"2. –ó–∞–≥—Ä—É–∑–∏—Ç—å"</span>)</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"3. –ù–∞—Å—Ç—Ä–æ–π–∫–∏"</span>)</div>
                    <div className="ml-4"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"4. –í—ã—Ö–æ–¥"</span>)</div>
                    <div className="ml-4 mt-2">choice = <span className="text-purple-300">input</span>(<span className="text-yellow-300">"–í—ã–±–æ—Ä: "</span>)</div>
                    <div className="ml-4 mt-2"><span className="text-blue-300">if</span> choice == <span className="text-yellow-300">"1"</span>:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ó–∞–ø—É—Å–∫ –Ω–æ–≤–æ–π –∏–≥—Ä—ã..."</span>)</div>
                    <div className="ml-4"><span className="text-blue-300">elif</span> choice == <span className="text-yellow-300">"2"</span>:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ó–∞–≥—Ä—É–∑–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è..."</span>)</div>
                    <div className="ml-4"><span className="text-blue-300">elif</span> choice == <span className="text-yellow-300">"3"</span>:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ù–∞—Å—Ç—Ä–æ–π–∫–∏..."</span>)</div>
                    <div className="ml-4"><span className="text-blue-300">elif</span> choice == <span className="text-yellow-300">"4"</span>:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!"</span>)</div>
                    <div className="ml-8 text-red-400">break  <span className="text-gray-400"># –≤—ã—Ö–æ–¥ –∏–∑ –ø—Ä–æ–≥—Ä–∞–º–º—ã</span></div>
                    <div className="ml-4"><span className="text-blue-300">else</span>:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"</span>)</div>
                  </div>
                </div>

                <div className="bg-purple-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-purple-700 mb-4">üéØ –ü—Ä–∏–º–µ—Ä: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å –Ω–µ—Å–∫–æ–ª—å–∫–∏–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏</h3>
                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm">
                    <div className="text-green-400"># –í–≤–æ–¥ —á–∏—Å–ª–∞ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ</div>
                    <div><span className="text-blue-300">while</span> <span className="text-blue-300">True</span>:</div>
                    <div className="ml-4">num = <span className="text-purple-300">input</span>(<span className="text-yellow-300">"–í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 10: "</span>)</div>
                    <div className="ml-4 mt-2"><span className="text-blue-300">if not</span> num.isdigit():</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–≠—Ç–æ –Ω–µ —á–∏—Å–ª–æ!"</span>)</div>
                    <div className="ml-8 text-yellow-400">continue  <span className="text-gray-400"># –Ω–æ–≤–∞—è –ø–æ–ø—ã—Ç–∫–∞</span></div>
                    <div className="ml-4 mt-2">num = <span className="text-purple-300">int</span>(num)</div>
                    <div className="ml-4"><span className="text-blue-300">if</span> num {'<'} 1 <span className="text-blue-300">or</span> num {'>'} 10:</div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">"–ß–∏—Å–ª–æ –≤–Ω–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞!"</span>)</div>
                    <div className="ml-8 text-yellow-400">continue</div>
                    <div className="ml-4 mt-2"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"–û—Ç–ª–∏—á–Ω–æ! –¢—ã –≤—ã–±—Ä–∞–ª {'{num}'}"</span>)</div>
                    <div className="ml-4 text-red-400">break  <span className="text-gray-400"># –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≤–≤–æ–¥</span></div>
                  </div>
                </div>

                <div className="bg-red-50 p-6 rounded-xl border-2 border-red-300">
                  <h3 className="text-xl font-bold text-red-700 mb-3 flex items-center gap-2">
                    <AlertCircle size={24} />
                    –û–ü–ê–°–ù–û–°–¢–¨: —Å–ª—É—á–∞–π–Ω—ã–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ —Ü–∏–∫–ª—ã!
                  </h3>
                  <p className="text-gray-700 mb-4">
                    –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª <code className="bg-red-200 px-2 py-1 rounded">while True</code> —Å <code className="bg-red-200 px-2 py-1 rounded">break</code> - —ç—Ç–æ —Ö–æ—Ä–æ—à–æ.<br/>
                    –ù–æ –µ—Å–ª–∏ –∑–∞–±—ã—Ç—å –∏–∑–º–µ–Ω–∏—Ç—å —É—Å–ª–æ–≤–∏–µ –∏–ª–∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç - –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–∏—Å–Ω–µ—Ç!
                  </p>
                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <div className="text-green-600 font-bold mb-2">‚úì –°–ü–ï–¶–ò–ê–õ–¨–ù–û (–û–ö):</div>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                        <div><span className="text-blue-300">while</span> <span className="text-blue-300">True</span>:</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> condition:</div>
                        <div className="ml-8 text-red-400">break</div>
                      </div>
                    </div>
                    <div>
                      <div className="text-red-600 font-bold mb-2">‚ùå –°–õ–£–ß–ê–ô–ù–û (–ë–ê–ì):</div>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                        <div className="ml-4"><span className="text-purple-300">print</span>(i)</div>
                        <div className="ml-4 text-red-400"># –∑–∞–±—ã–ª–∏ i += 1</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 5: –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã */}
          {activeSection === 5 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">üîÅ –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã while</h2>
              
              <div className="space-y-6">
                <div className="bg-purple-50 p-6 rounded-xl">
                  <h3 className="text-2xl font-bold text-purple-700 mb-4">–ß—Ç–æ —ç—Ç–æ?</h3>
                  <p className="text-lg text-gray-700">
                    <strong>–í–ª–æ–∂–µ–Ω–Ω—ã–π —Ü–∏–∫–ª</strong> - —ç—Ç–æ —Ü–∏–∫–ª –≤–Ω—É—Ç—Ä–∏ –¥—Ä—É–≥–æ–≥–æ —Ü–∏–∫–ª–∞. –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤–Ω–µ—à–Ω–µ–≥–æ.
                  </p>
                </div>

                <div className="bg-white border-4 border-purple-300 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-purple-700 mb-4">üîÑ –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç:</h3>
                  <div className="space-y-4">
                    <div className="flex items-start gap-4">
                      <div className="w-12 h-12 bg-purple-500 text-white rounded-full flex items-center justify-center font-bold flex-shrink-0">1</div>
                      <div className="flex-1">
                        <div className="bg-purple-100 p-3 rounded-lg">
                          <strong>–í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª</strong> –¥–µ–ª–∞–µ—Ç 1 –∏—Ç–µ—Ä–∞—Ü–∏—é
                        </div>
                      </div>
                    </div>
                    <div className="ml-16 border-l-4 border-purple-300 pl-4">
                      <div className="flex items-start gap-4 mb-3">
                        <div className="w-10 h-10 bg-blue-500 text-white rounded-full flex items-center justify-center font-bold flex-shrink-0 text-sm">2a</div>
                        <div className="flex-1 bg-blue-100 p-3 rounded-lg">
                          <strong>–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª</strong> –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é (–≤—Å–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏)
                        </div>
                      </div>
                    </div>
                    <div className="flex items-start gap-4">
                      <div className="w-12 h-12 bg-purple-500 text-white rounded-full flex items-center justify-center font-bold flex-shrink-0">3</div>
                      <div className="flex-1">
                        <div className="bg-purple-100 p-3 rounded-lg">
                          <strong>–í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª</strong> –¥–µ–ª–∞–µ—Ç 2 –∏—Ç–µ—Ä–∞—Ü–∏—é ‚Üí –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Å–Ω–æ–≤–∞ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ø–æ–ª–Ω–æ—Å—Ç—å—é
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-4">üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è:</h3>
                  <p className="text-gray-700 mb-4">–¢–∞–±–ª–∏—Ü–∞ 3√ó3 - –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª –ø–æ —Å—Ç—Ä–æ–∫–∞–º, –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π –ø–æ —Å—Ç–æ–ª–±—Ü–∞–º:</p>
                  
                  <div className="bg-white p-6 rounded-lg">
                    <button
                      onClick={runNestedDemo}
                      disabled={nestedDemo.running}
                      className="bg-purple-500 text-white px-6 py-3 rounded-lg font-bold flex items-center gap-2 disabled:bg-gray-300 mb-4"
                    >
                      <Play size={20} />
                      –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã
                    </button>
                    
                    <div className="bg-gray-50 p-4 rounded-lg min-h-32 max-h-64 overflow-y-auto">
                      {nestedDemo.output.length === 0 ? (
                        <p className="text-gray-400 text-center">–ù–∞–∂–º–∏ –∫–Ω–æ–ø–∫—É –¥–ª—è –∑–∞–ø—É—Å–∫–∞</p>
                      ) : (
                        nestedDemo.output.map((line, i) => (
                          <div key={i} className="mb-1 text-gray-700 font-mono text-sm">
                            {line}
                          </div>
                        ))
                      )}
                    </div>
                  </div>

                  <div className="bg-gray-900 text-white p-4 rounded-lg font-mono text-sm mt-4">
                    <div className="text-green-400"># –í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã - —Ç–∞–±–ª–∏—Ü–∞</div>
                    <div>row = 1</div>
                    <div><span className="text-blue-300">while</span> row {'<='} 3:  <span className="text-gray-400"># –≤–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª</span></div>
                    <div className="ml-4">col = 1</div>
                    <div className="ml-4"><span className="text-blue-300">while</span> col {'<='} 3:  <span className="text-gray-400"># –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π</span></div>
                    <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"–°—Ç—Ä–æ–∫–∞ {'{row}'}, –°—Ç–æ–ª–±–µ—Ü {'{col}'}"</span>)</div>
                    <div className="ml-8">col += 1</div>
                    <div className="ml-4">row += 1</div>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-4">üí° –ü—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–µ –ø—Ä–∏–º–µ—Ä—ã:</h3>
                  
                  <div className="space-y-4">
                    <div className="bg-white p-4 rounded-lg">
                      <strong>1. –¢–∞–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è:</strong>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm mt-2">
                        <div>i = 1</div>
                        <div><span className="text-blue-300">while</span> i {'<='} 3:</div>
                        <div className="ml-4">j = 1</div>
                        <div className="ml-4"><span className="text-blue-300">while</span> j {'<='} 3:</div>
                        <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"{'{i}'} √ó {'{j}'} = {'{i*j}'}"</span>, end=<span className="text-yellow-300">"  "</span>)</div>
                        <div className="ml-8">j += 1</div>
                        <div className="ml-4"><span className="text-purple-300">print</span>()  <span className="text-gray-400"># –Ω–æ–≤–∞—è —Å—Ç—Ä–æ–∫–∞</span></div>
                        <div className="ml-4">i += 1</div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <strong>2. –ü–æ–∏—Å–∫ –≤ –¥–≤—É–º–µ—Ä–Ω–æ–º –º–∞—Å—Å–∏–≤–µ:</strong>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm mt-2">
                        <div>found = <span className="text-blue-300">False</span></div>
                        <div>row = 0</div>
                        <div><span className="text-blue-300">while</span> row {'<'} <span className="text-purple-300">len</span>(matrix) <span className="text-blue-300">and not</span> found:</div>
                        <div className="ml-4">col = 0</div>
                        <div className="ml-4"><span className="text-blue-300">while</span> col {'<'} <span className="text-purple-300">len</span>(matrix[row]):</div>
                        <div className="ml-8"><span className="text-blue-300">if</span> matrix[row][col] == target:</div>
                        <div className="ml-12">found = <span className="text-blue-300">True</span></div>
                        <div className="ml-12 text-red-400">break</div>
                        <div className="ml-8">col += 1</div>
                        <div className="ml-4">row += 1</div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-yellow-50 p-6 rounded-xl border-2 border-yellow-400">
                  <h3 className="text-xl font-bold text-yellow-700 mb-4">‚ö†Ô∏è break –∏ continue –≤–æ –≤–ª–æ–∂–µ–Ω–Ω—ã—Ö —Ü–∏–∫–ª–∞—Ö:</h3>
                  <div className="space-y-4">
                    <div className="bg-white p-4 rounded-lg">
                      <p className="text-gray-700 mb-3"><strong>–í–∞–∂–Ω–æ:</strong> break –∏ continue –≤–ª–∏—è—é—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ —Ç–æ—Ç —Ü–∏–∫–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–∞—Ö–æ–¥—è—Ç—Å—è!</p>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} 3:</div>
                        <div className="ml-4">j = 0</div>
                        <div className="ml-4"><span className="text-blue-300">while</span> j {'<'} 3:</div>
                        <div className="ml-8"><span className="text-blue-300">if</span> j == 1:</div>
                        <div className="ml-12 text-red-400">break  <span className="text-gray-400"># –≤—ã—Ö–æ–¥ –∏–∑ –í–ù–£–¢–†–ï–ù–ù–ï–ì–û</span></div>
                        <div className="ml-8"><span className="text-purple-300">print</span>(<span className="text-yellow-300">f"{'{i}'},{'{j}'}"</span>)</div>
                        <div className="ml-8">j += 1</div>
                        <div className="ml-4">i += 1  <span className="text-gray-400"># –≤–Ω–µ—à–Ω–∏–π –ø—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è!</span></div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <p className="text-gray-700 mb-3">–ß—Ç–æ–±—ã –≤—ã–π—Ç–∏ –∏–∑ –æ–±–æ–∏—Ö —Ü–∏–∫–ª–æ–≤, –∏—Å–ø–æ–ª—å–∑—É–π —Ñ–ª–∞–≥:</p>
                      <div className="bg-gray-900 text-white p-3 rounded font-mono text-sm">
                        <div>exit_all = <span className="text-blue-300">False</span></div>
                        <div>i = 0</div>
                        <div><span className="text-blue-300">while</span> i {'<'} 3 <span className="text-blue-300">and not</span> exit_all:</div>
                        <div className="ml-4">j = 0</div>
                        <div className="ml-4"><span className="text-blue-300">while</span> j {'<'} 3:</div>
                        <div className="ml-8"><span className="text-blue-300">if</span> condition:</div>
                        <div className="ml-12">exit_all = <span className="text-blue-300">True</span></div>
                        <div className="ml-12 text-red-400">break</div>
                        <div className="ml-8">j += 1</div>
                        <div className="ml-4">i += 1</div>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 6: –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è */}
          {activeSection === 6 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">‚ö° –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –∏ —á–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏</h2>
              
              <div className="space-y-6">
                <div className="bg-red-50 p-6 rounded-xl border-2 border-red-400">
                  <h3 className="text-2xl font-bold text-red-700 mb-4 flex items-center gap-2">
                    <AlertCircle size={28} />
                    –¢–æ–ø-5 –æ—à–∏–±–æ–∫ —Å while
                  </h3>
                  
                  <div className="space-y-4">
                    <div className="bg-white p-4 rounded-lg">
                      <div className="flex items-start gap-3">
                        <div className="text-2xl">1Ô∏è‚É£</div>
                        <div className="flex-1">
                          <strong className="text-red-700">–ó–∞–±—ã—Ç—å –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç/–¥–µ–∫—Ä–µ–º–µ–Ω—Ç</strong>
                          <div className="grid grid-cols-2 gap-3 mt-3">
                            <div>
                              <div className="text-red-600 text-sm font-bold mb-1">‚ùå –û–®–ò–ë–ö–ê:</div>
                              <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                                <div>i = 0</div>
                                <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                                <div className="ml-4"><span className="text-purple-300">print</span>(i)</div>
                                <div className="ml-4 text-red-400"># –∑–∞–≤–∏—Å–Ω–µ—Ç!</div>
                              </div>
                            </div>
                            <div>
                              <div className="text-green-600 text-sm font-bold mb-1">‚úì –ü–†–ê–í–ò–õ–¨–ù–û:</div>
                              <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                                <div>i = 0</div>
                                <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                                <div className="ml-4"><span className="text-purple-300">print</span>(i)</div>
                                <div className="ml-4 text-green-400">i += 1</div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <div className="flex items-start gap-3">
                        <div className="text-2xl">2Ô∏è‚É£</div>
                        <div className="flex-1">
                          <strong className="text-red-700">–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø–æ–∑–∏—Ü–∏—è –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞ —Å continue</strong>
                          <div className="grid grid-cols-2 gap-3 mt-3">
                            <div>
                              <div className="text-red-600 text-sm font-bold mb-1">‚ùå –û–®–ò–ë–ö–ê:</div>
                              <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                                <div>i = 0</div>
                                <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                                <div className="ml-4"><span className="text-blue-300">if</span> i % 2 == 0:</div>
                                <div className="ml-8 text-yellow-400">continue</div>
                                <div className="ml-4 text-red-400">i += 1  # –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è!</div>
                              </div>
                            </div>
                            <div>
                              <div className="text-green-600 text-sm font-bold mb-1">‚úì –ü–†–ê–í–ò–õ–¨–ù–û:</div>
                              <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                                <div>i = 0</div>
                                <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                                <div className="ml-4 text-green-400">i += 1  # —Å–Ω–∞—á–∞–ª–∞!</div>
                                <div className="ml-4"><span className="text-blue-300">if</span> i % 2 == 0:</div>
                                <div className="ml-8 text-yellow-400">continue</div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <div className="flex items-start gap-3">
                        <div className="text-2xl">3Ô∏è‚É£</div>
                        <div className="flex-1">
                          <strong className="text-red-700">–ò–∑–º–µ–Ω–µ–Ω–∏–µ —É—Å–ª–æ–≤–∏—è –≤–Ω—É—Ç—Ä–∏ –±–µ–∑ –æ—Å—Ç–æ—Ä–æ–∂–Ω–æ—Å—Ç–∏</strong>
                          <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs mt-2">
                            <div>count = 0</div>
                            <div>limit = 10</div>
                            <div><span className="text-blue-300">while</span> count {'<'} limit:</div>
                            <div className="ml-4"><span className="text-purple-300">print</span>(count)</div>
                            <div className="ml-4">count += 1</div>
                            <div className="ml-4 text-red-400">limit += 1  # –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª!</div>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <div className="flex items-start gap-3">
                        <div className="text-2xl">4Ô∏è‚É£</div>
                        <div className="flex-1">
                          <strong className="text-red-700">–ù–µ –ø—Ä–æ–≤–µ—Ä—è—Ç—å –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏</strong>
                          <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs mt-2">
                            <div>i = 0</div>
                            <div><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(items):</div>
                            <div className="ml-4 text-red-400"># —á—Ç–æ –µ—Å–ª–∏ items –ø—É—Å—Ç–æ–π?</div>
                            <div className="ml-4"><span className="text-purple-300">print</span>(items[i])</div>
                            <div className="ml-4">i += 1</div>
                          </div>
                          <div className="mt-2 text-sm text-gray-600">
                            ‚úì –õ—É—á—à–µ: –ø—Ä–æ–≤–µ—Ä–∏—Ç—å <code className="bg-gray-200 px-1 rounded">if not items:</code> –ø–µ—Ä–µ–¥ —Ü–∏–∫–ª–æ–º
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <div className="flex items-start gap-3">
                        <div className="text-2xl">5Ô∏è‚É£</div>
                        <div className="flex-1">
                          <strong className="text-red-700">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å while –∫–æ–≥–¥–∞ –Ω—É–∂–µ–Ω for</strong>
                          <div className="grid grid-cols-2 gap-3 mt-3">
                            <div>
                              <div className="text-red-600 text-sm font-bold mb-1">‚ùå –ù–µ–æ–ø—Ç–∏–º–∞–ª—å–Ω–æ:</div>
                              <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                                <div>i = 0</div>
                                <div><span className="text-blue-300">while</span> i {'<'} 10:</div>
                                <div className="ml-4"><span className="text-purple-300">print</span>(i)</div>
                                <div className="ml-4">i += 1</div>
                              </div>
                            </div>
                            <div>
                              <div className="text-green-600 text-sm font-bold mb-1">‚úì –õ—É—á—à–µ:</div>
                              <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                                <div><span className="text-blue-300">for</span> i <span className="text-blue-300">in</span> <span className="text-purple-300">range</span>(10):</div>
                                <div className="ml-4"><span className="text-purple-300">print</span>(i)</div>
                                <div className="text-gray-400"># –∫–æ—Ä–æ—á–µ –∏ –ø–æ–Ω—è—Ç–Ω–µ–µ</div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-4">‚ö° –°–æ–≤–µ—Ç—ã –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:</h3>
                  <div className="space-y-3">
                    <div className="bg-white p-4 rounded-lg">
                      <strong>1. –ú–∏–Ω–∏–º–∏–∑–∏—Ä—É–π –≤—ã—á–∏—Å–ª–µ–Ω–∏—è –≤ —É—Å–ª–æ–≤–∏–∏</strong>
                      <div className="grid grid-cols-2 gap-3 mt-2">
                        <div>
                          <div className="text-sm text-gray-600 mb-1">–ú–µ–¥–ª–µ–Ω–Ω–æ:</div>
                          <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                            <div><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(items):</div>
                            <div className="text-gray-400"># len() –∫–∞–∂–¥—ã–π —Ä–∞–∑</div>
                          </div>
                        </div>
                        <div>
                          <div className="text-sm text-gray-600 mb-1">–ë—ã—Å—Ç—Ä–æ:</div>
                          <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs">
                            <div>length = <span className="text-purple-300">len</span>(items)</div>
                            <div><span className="text-blue-300">while</span> i {'<'} length:</div>
                          </div>
                        </div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <strong>2. –ò—Å–ø–æ–ª—å–∑—É–π early exit (break) –ø—Ä–∏ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞</strong>
                      <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs mt-2">
                        <div><span className="text-blue-300">while</span> i {'<'} <span className="text-purple-300">len</span>(items):</div>
                        <div className="ml-4"><span className="text-blue-300">if</span> items[i] == target:</div>
                        <div className="ml-8 text-red-400">break  <span className="text-gray-400"># –Ω–µ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å—Ç–∞–ª—å–Ω–æ–µ</span></div>
                        <div className="ml-4">i += 1</div>
                      </div>
                    </div>

                    <div className="bg-white p-4 rounded-lg">
                      <strong>3. –ù–µ –¥—É–±–ª–∏—Ä—É–π –ø—Ä–æ–≤–µ—Ä–∫–∏</strong>
                      <div className="bg-gray-900 text-white p-2 rounded font-mono text-xs mt-2">
                        <div className="text-green-400"># –ü–ª–æ—Ö–æ: –¥–≤–æ–π–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞</div>
                        <div><span className="text-blue-300">while</span> i {'<'} 10 <span className="text-blue-300">and</span> i {'<'} max_value:</div>
                        <div className="text-gray-400"># –µ—Å–ª–∏ max_value –≤—Å–µ–≥–¥–∞ {'>'} 10</div>
                      </div>
                    </div>
                  </div>
                </div>

                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-4">üîÄ –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å while vs for?</h3>
                  <div className="grid grid-cols-2 gap-4">
                    <div className="bg-white p-4 rounded-lg">
                      <strong className="text-blue-600">–ò—Å–ø–æ–ª—å–∑—É–π while:</strong>
                      <ul className="mt-2 space-y-1 text-sm text-gray-700">
                        <li>‚Ä¢ –ù–µ –∑–Ω–∞–µ—à—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Ç–µ—Ä–∞—Ü–∏–π</li>
                        <li>‚Ä¢ –£—Å–ª–æ–≤–∏–µ —Å–ª–æ–∂–Ω–æ–µ</li>
                        <li>‚Ä¢ –ó–∞–≤–∏—Å–∏—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –≤–≤–æ–¥–∞</li>
                        <li>‚Ä¢ –ñ–¥—ë—à—å –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω–æ–≥–æ —Å–æ–±—ã—Ç–∏—è</li>
                      </ul>
                    </div>
                    <div className="bg-white p-4 rounded-lg">
                      <strong className="text-green-600">–ò—Å–ø–æ–ª—å–∑—É–π for:</strong>
                      <ul className="mt-2 space-y-1 text-sm text-gray-700">
                        <li>‚Ä¢ –ó–Ω–∞–µ—à—å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–π</li>
                        <li>‚Ä¢ –ü—Ä–æ—Ö–æ–¥–∏—à—å –ø–æ —Å–ø–∏—Å–∫—É/–¥–∏–∞–ø–∞–∑–æ–Ω—É</li>
                        <li>‚Ä¢ –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π</li>
                        <li>‚Ä¢ –ö–æ–¥ –∫–æ—Ä–æ—á–µ –∏ –ø–æ–Ω—è—Ç–Ω–µ–µ</li>
                      </ul>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 7: –°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è */}
          {activeSection === 7 && (
            <div>
              <h2 className="text-3xl font-bold text-purple-600 mb-6">üìù –°–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞–Ω–∏—è</h2>
              
              <div className="space-y-6">
                <div className="bg-blue-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-blue-700 mb-3">–ó–∞–¥–∞–Ω–∏–µ 1: –£–≥–∞–¥–∞–π —á–∏—Å–ª–æ ‚≠ê‚≠ê</h3>
                  <p className="text-gray-700 mb-3">
                    –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥—ã–≤–∞–µ—Ç.
                    –ü–æ—Å–ª–µ –∫–∞–∂–¥–æ–π –ø–æ–ø—ã—Ç–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –≥–æ–≤–æ—Ä–∏—Ç "–±–æ–ª—å—à–µ" –∏–ª–∏ "–º–µ–Ω—å—à–µ".
                  </p>
                  <div className="bg-white p-4 rounded-lg">
                    <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong>
                    <ul className="list-disc ml-6 text-gray-600 mt-2">
                      <li>–ò—Å–ø–æ–ª—å–∑—É–π <code className="bg-gray-200 px-1 rounded">while True</code></li>
                      <li>–°—á–∏—Ç–∞–π –ø–æ–ø—ã—Ç–∫–∏</li>
                      <li>–ü—Ä–∏ —É–≥–∞–¥—ã–≤–∞–Ω–∏–∏ –≤—ã–≤–µ–¥–∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫ –∏ –≤—ã–π–¥–∏ –∏–∑ —Ü–∏–∫–ª–∞</li>
                    </ul>
                  </div>
                </div>

                <div className="bg-green-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-green-700 mb-3">–ó–∞–¥–∞–Ω–∏–µ 2: –ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –º–µ–Ω—é ‚≠ê‚≠ê‚≠ê</h3>
                  <p className="text-gray-700 mb-3">
                    –°–æ–∑–¥–∞–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —Å –º–µ–Ω—é, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç –ø–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±–µ—Ä–µ—Ç –≤—ã—Ö–æ–¥.
                  </p>
                  <div className="bg-white p-4 rounded-lg">
                    <strong>–ú–µ–Ω—é:</strong>
                    <div className="mt-2 font-mono text-sm">
                      <div>1. –°–ª–æ–∂–µ–Ω–∏–µ</div>
                      <div>2. –í—ã—á–∏—Ç–∞–Ω–∏–µ</div>
                      <div>3. –£–º–Ω–æ–∂–µ–Ω–∏–µ</div>
                      <div>4. –î–µ–ª–µ–Ω–∏–µ</div>
                      <div>5. –í—ã—Ö–æ–¥</div>
                    </div>
                    <div className="mt-3 text-gray-600">
                      <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong>
                      <ul className="list-disc ml-6 mt-1">
                        <li>–ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Å break –ø—Ä–∏ –≤—ã–±–æ—Ä–µ 5</li>
                        <li>–ó–∞–ø—Ä–æ—Å –¥–≤—É—Ö —á–∏—Å–µ–ª –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π</li>
                        <li>–û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–ª–µ–Ω–∏—è –Ω–∞ –Ω–æ–ª—å</li>
                        <li>–ü—Ä–∏ –Ω–µ–≤–µ—Ä–Ω–æ–º –≤—ã–±–æ—Ä–µ - –ø–æ–≤—Ç–æ—Ä–Ω—ã–π –∑–∞–ø—Ä–æ—Å</li>
                      </ul>
                    </div>
                  </div>
                </div>

                <div className="bg-yellow-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-yellow-700 mb-3">–ó–∞–¥–∞–Ω–∏–µ 3: –ü–æ–∏—Å–∫ –ø—Ä–æ—Å—Ç—ã—Ö —á–∏—Å–µ–ª ‚≠ê‚≠ê‚≠ê</h3>
                  <p className="text-gray-700 mb-3">
                    –ù–∞–π–¥–∏ –≤—Å–µ –ø—Ä–æ—Å—Ç—ã–µ —á–∏—Å–ª–∞ –æ—Ç 2 –¥–æ N (–≤–≤–æ–¥–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å).
                  </p>
                  <div className="bg-white p-4 rounded-lg">
                    <strong>–ê–ª–≥–æ—Ä–∏—Ç–º:</strong>
                    <ul className="list-disc ml-6 text-gray-600 mt-2">
                      <li>–í–Ω–µ—à–Ω–∏–π —Ü–∏–∫–ª: –ø—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥–æ–µ —á–∏—Å–ª–æ –æ—Ç 2 –¥–æ N</li>
                      <li>–í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ü–∏–∫–ª: –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–µ–ª–∏—Ç–µ–ª–∏ –æ—Ç 2 –¥–æ ‚àö—á–∏—Å–ª–∞</li>
                      <li>–ò—Å–ø–æ–ª—å–∑—É–π —Ñ–ª–∞–≥ <code className="bg-gray-200 px-1 rounded">is_prime</code></li>
                      <li>–ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º –¥–µ–ª–∏—Ç–µ–ª—å - <code className="bg-gray-200 px-1 rounded">break</code> –∏–∑ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ü–∏–∫–ª–∞</li>
                    </ul>
                  </div>
                </div>

                <div className="bg-purple-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-purple-700 mb-3">–ó–∞–¥–∞–Ω–∏–µ 4: –ò–≥—Ä–∞ "–ë—ã–∫–∏ –∏ –∫–æ—Ä–æ–≤—ã" ‚≠ê‚≠ê‚≠ê‚≠ê</h3>
                  <p className="text-gray-700 mb-3">
                    –ü—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≥–∞–¥—ã–≤–∞–µ—Ç 4-–∑–Ω–∞—á–Ω–æ–µ —á–∏—Å–ª–æ (–≤—Å–µ —Ü–∏—Ñ—Ä—ã —Ä–∞–∑–Ω—ã–µ).
                    –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–≥–∞–¥—ã–≤–∞–µ—Ç. –ü—Ä–æ–≥—Ä–∞–º–º–∞ –¥–∞—ë—Ç –ø–æ–¥—Å–∫–∞–∑–∫–∏:
                  </p>
                  <div className="bg-white p-4 rounded-lg">
                    <ul className="list-disc ml-6 text-gray-700">
                      <li><strong>–ë—ã–∫</strong> - –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–∏—Ñ—Ä–∞ –Ω–∞ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏</li>
                      <li><strong>–ö–æ—Ä–æ–≤–∞</strong> - –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è —Ü–∏—Ñ—Ä–∞ –Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏</li>
                    </ul>
                    <div className="mt-3 text-sm text-gray-600">
                      –ü—Ä–∏–º–µ—Ä: –∑–∞–≥–∞–¥–∞–Ω–æ 1234, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤—ë–ª 1356
                      <div className="mt-1">–û—Ç–≤–µ—Ç: 1 –±—ã–∫ (1), 1 –∫–æ—Ä–æ–≤–∞ (3)</div>
                    </div>
                    <div className="mt-3">
                      <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong>
                      <ul className="list-disc ml-6 text-gray-600 mt-1">
                        <li>–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ 4-–∑–Ω–∞—á–Ω–æ–≥–æ —á–∏—Å–ª–∞</li>
                        <li>–ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–≤–æ–¥–∞ (4 —Ü–∏—Ñ—Ä—ã, –≤—Å–µ —Ä–∞–∑–Ω—ã–µ)</li>
                        <li>–ü–æ–¥—Å—á—ë—Ç –±—ã–∫–æ–≤ –∏ –∫–æ—Ä–æ–≤</li>
                        <li>–¶–∏–∫–ª –¥–æ –ø–æ–±–µ–¥—ã (4 –±—ã–∫–∞)</li>
                      </ul>
                    </div>
                  </div>
                </div>

                <div className="bg-red-50 p-6 rounded-xl">
                  <h3 className="text-xl font-bold text-red-700 mb-3">–ó–∞–¥–∞–Ω–∏–µ 5: –ë–∞–Ω–∫–æ–≤—Å–∫–∞—è —Å–∏—Å—Ç–µ–º–∞ ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê</h3>
                  <p className="text-gray-700 mb-3">
                    –°–æ–∑–¥–∞–π –ø—Ä–æ—Å—Ç—É—é –±–∞–Ω–∫–æ–≤—Å–∫—É—é —Å–∏—Å—Ç–µ–º—É —Å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π.
                  </p>
                  <div className="bg-white p-4 rounded-lg">
                    <strong>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª:</strong>
                    <div className="mt-2 space-y-2 text-gray-700">
                      <div><strong>1. –í—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É:</strong></div>
                      <ul className="list-disc ml-6 text-sm">
                        <li>–ó–∞–ø—Ä–æ—Å –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è</li>
                        <li>–ú–∞–∫—Å–∏–º—É–º 3 –ø–æ–ø—ã—Ç–∫–∏</li>
                        <li>–ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ø—Ä–∏ –ø—Ä–µ–≤—ã—à–µ–Ω–∏–∏</li>
                      </ul>
                      <div><strong>2. –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–ø–æ—Å–ª–µ –≤—Ö–æ–¥–∞):</strong></div>
                      <ul className="list-disc ml-6 text-sm">
                        <li>–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –±–∞–ª–∞–Ω—Å</li>
                        <li>–ü–æ–ø–æ–ª–Ω–∏—Ç—å —Å—á—ë—Ç</li>
                        <li>–°–Ω—è—Ç—å –¥–µ–Ω—å–≥–∏ (—Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ—Å—Ç–∏)</li>
                        <li>–ò—Å—Ç–æ—Ä–∏—è –æ–ø–µ—Ä–∞—Ü–∏–π (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 5)</li>
                        <li>–í—ã—Ö–æ–¥</li>
                      </ul>
                    </div>
                    <div className="mt-3 text-sm text-gray-600">
                      <strong>–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è:</strong>
                      <ul className="list-disc ml-6 mt-1">
                        <li>–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Ñ–ª–∞–≥–∏ –¥–ª—è —Å–æ—Å—Ç–æ—è–Ω–∏–π</li>
                        <li>–í–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã (–º–µ–Ω—é –≤–Ω—É—Ç—Ä–∏ –≤—Ö–æ–¥–∞)</li>
                        <li>–°–æ—Ö—Ä–∞–Ω—è—Ç—å –æ–ø–µ—Ä–∞—Ü–∏–∏ –≤ —Å–ø–∏—Å–æ–∫</li>
                        <li>–í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Å–µ—Ö –≤–≤–æ–¥–æ–≤</li>
                      </ul>
                    </div>
                  </div>
                </div>

                <div className="bg-gradient-to-r from-purple-100 to-blue-100 p-6 rounded-xl">
                  <h3 className="text-2xl font-bold text-purple-700 mb-4 text-center">
                    üéØ –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ —Ä–µ—à–µ–Ω–∏–π
                  </h3>
                  <div className="grid grid-cols-3 gap-4">
                    <div className="bg-white p-4 rounded-lg text-center">
                      <div className="text-3xl mb-2">‚úì</div>
                      <strong>–ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å</strong>
                      <div className="text-sm text-gray-600 mt-2">–ü—Ä–æ–≥—Ä–∞–º–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–µ–∑ –æ—à–∏–±–æ–∫</div>
                    </div>
                    <div className="bg-white p-4 rounded-lg text-center">
                      <div className="text-3xl mb-2">üìñ</div>
                      <strong>–ß–∏—Ç–∞–µ–º–æ—Å—Ç—å</strong>
                      <div className="text-sm text-gray-600 mt-2">–ö–æ–¥ –ø–æ–Ω—è—Ç–µ–Ω –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω</div>
                    </div>
                    <div className="bg-white p-4 rounded-lg text-center">
                      <div className="text-3xl mb-2">‚ö°</div>
                      <strong>–≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å</strong>
                      <div className="text-sm text-gray-600 mt-2">–ù–µ—Ç –ª–∏—à–Ω–∏—Ö –æ–ø–µ—Ä–∞—Ü–∏–π</div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –°–µ–∫—Ü–∏—è 8: –ü—Ä–∞–∫—Ç–∏–∫–∞ */}
          {activeSection === 8 && (
            <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
              <div className="space-y-4">
                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <h2 className="text-2xl font-bold text-purple-600 mb-4">
                    üìã –í—ã–±–µ—Ä–∏ –∑–∞–¥–∞—á—É
                  </h2>
                  <div className="space-y-3">
                    {tasks.map((task, index) => (
                      <button
                        key={task.id}
                        onClick={() => changeTask(index)}
                        className={`w-full text-left p-4 rounded-lg transition ${
                          activeTask === index
                            ? 'bg-purple-100 border-2 border-purple-500'
                            : solvedTasks.includes(index)
                            ? 'bg-green-100 border-2 border-green-500'
                            : 'bg-gray-50 hover:bg-gray-100'
                        }`}
                      >
                        <div className="flex items-center justify-between mb-2">
                          <span className="font-bold text-gray-800">{task.title}</span>
                          <span className="text-yellow-500">{task.difficulty}</span>
                        </div>
                        <p className="text-sm text-gray-600">{task.description}</p>
                      </button>
                    ))}
                  </div>
                </div>

                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <h3 className="text-xl font-bold text-blue-600 mb-3">
                    {tasks[activeTask].title}
                  </h3>
                  <p className="text-gray-700 mb-4">{tasks[activeTask].description}</p>
                  
                  {attempts < 5 ? (
                    <div className="bg-gray-100 p-4 rounded-lg mb-4 flex items-center gap-3">
                      <Lock size={20} className="text-gray-500" />
                      <div>
                        <strong className="text-gray-700">–ü–æ–¥—Å–∫–∞–∑–∫–∏ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã</strong>
                        <p className="text-sm text-gray-600">–°–¥–µ–ª–∞–π 5 –ø–æ–ø—ã—Ç–æ–∫ —á—Ç–æ–±—ã –æ—Ç–∫—Ä—ã—Ç—å ({attempts}/5)</p>
                      </div>
                    </div>
                  ) : (
                    <div className="bg-blue-50 p-4 rounded-lg mb-4">
                      <div className="flex items-center gap-2 mb-2">
                        <Lightbulb size={20} className="text-yellow-600" />
                        <strong className="text-blue-700">–ü–æ–¥—Å–∫–∞–∑–∫–∏:</strong>
                      </div>
                      <ul className="list-disc ml-6 text-sm text-gray-700 space-y-1">
                        {tasks[activeTask].hints.map((hint, i) => (
                          <li key={i}>{hint}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  <div className="bg-green-50 p-4 rounded-lg">
                    <strong className="text-green-700">–û–∂–∏–¥–∞–µ–º—ã–π –≤—ã–≤–æ–¥:</strong>
                    <div className="mt-2 bg-white p-3 rounded font-mono text-sm text-gray-800">
                      {tasks[activeTask].tests[0].expected.map((line, i) => (
                        <div key={i}>{line}</div>
                      ))}
                    </div>
                  </div>

                  {attempts > 0 && (
                    <div className="mt-4 text-center text-gray-600">
                      –ü–æ–ø—ã—Ç–æ–∫: {attempts}
                    </div>
                  )}
                </div>
              </div>

              <div className="space-y-4">
                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <div className="flex items-center justify-between mb-4">
                    <h3 className="text-xl font-bold text-purple-600">üíª –†–µ–¥–∞–∫—Ç–æ—Ä –∫–æ–¥–∞</h3>
                    <div className="flex gap-2">
                      <button
                        onClick={resetTask}
                        className="px-4 py-2 bg-gray-200 text-gray-700 rounded-lg hover:bg-gray-300 flex items-center gap-2"
                      >
                        <RotateCcw size={16} />
                        –°–±—Ä–æ—Å
                      </button>
                      {(solved || attempts >= 10) && (
                        <button
                          onClick={showSolution}
                          className="px-4 py-2 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600"
                        >
                          –ü–æ–∫–∞–∑–∞—Ç—å —Ä–µ—à–µ–Ω–∏–µ
                        </button>
                      )}
                    </div>
                  </div>
                  
                  <textarea
                    value={userCode}
                    onChange={(e) => setUserCode(e.target.value)}
                    onKeyDown={handleKeyDown}
                    className="w-full h-64 p-4 bg-gray-900 text-white font-mono text-sm rounded-lg resize-none"
                    placeholder="# –ü–∏—à–∏ –∫–æ–¥ –∑–¥–µ—Å—å... (Tab –¥–ª—è –æ—Ç—Å—Ç—É–ø–∞)"
                    spellCheck={false}
                  />
                  
                  <button
                    onClick={runCode}
                    className="w-full mt-4 px-6 py-3 bg-green-500 text-white rounded-lg font-bold hover:bg-green-600 flex items-center justify-center gap-2"
                  >
                    <Play size={20} />
                    –ó–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–¥
                  </button>
                </div>

                <div className="bg-white rounded-2xl shadow-lg p-6">
                  <h3 className="text-xl font-bold text-blue-600 mb-4">üì§ –†–µ–∑—É–ª—å—Ç–∞—Ç</h3>
                  
                  {testResults && (
                    <div className={`p-4 rounded-lg mb-4 ${
                      testResults.passed
                        ? 'bg-green-100 border-2 border-green-500'
                        : 'bg-red-100 border-2 border-red-500'
                    }`}>
                      <div className="flex items-center gap-2 mb-2">
                        {testResults.passed ? (
                          <>
                            <Check size={24} className="text-green-600" />
                            <span className="font-bold text-green-700 text-lg">–û—Ç–ª–∏—á–Ω–æ! –ó–∞–¥–∞—á–∞ —Ä–µ—à–µ–Ω–∞!</span>
                          </>
                        ) : (
                          <>
                            <X size={24} className="text-red-600" />
                            <span className="font-bold text-red-700 text-lg">–ù–µ —Å–æ–≤—Å–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ</span>
                          </>
                        )}
                      </div>
                      {testResults.error && (
                        <p className="text-red-600 text-sm">{testResults.error}</p>
                      )}
                    </div>
                  )}

                  <div className="grid grid-cols-2 gap-4">
                    <div>
                      <div className="font-bold text-gray-700 mb-2">–¢–≤–æ–π –≤—ã–≤–æ–¥:</div>
                      <div className="bg-gray-100 p-3 rounded font-mono text-sm min-h-32">
                        {output.length > 0 ? (
                          output.map((line, i) => (
                            <div key={i} className="text-gray-800">{line}</div>
                          ))
                        ) : (
                          <div className="text-gray-400">–ü—É—Å—Ç–æ</div>
                        )}
                      </div>
                    </div>
                    
                    <div>
                      <div className="font-bold text-gray-700 mb-2">–û–∂–∏–¥–∞–µ—Ç—Å—è:</div>
                      <div className="bg-green-50 p-3 rounded font-mono text-sm min-h-32">
                        {tasks[activeTask].tests[0].expected.map((line, i) => (
                          <div key={i} className="text-gray-800">{line}</div>
                        ))}
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* –ù–∞–≤–∏–≥–∞—Ü–∏—è –≤–Ω–∏–∑—É */}
          <div className="flex justify-between mt-8 pt-6 border-t-2">
            <button
              onClick={() => setActiveSection(Math.max(0, activeSection - 1))}
              disabled={activeSection === 0}
              className="flex items-center gap-2 px-6 py-3 bg-gray-200 rounded-lg font-bold disabled:opacity-50"
            >
              <ChevronLeft size={20} />
              –ù–∞–∑–∞–¥
            </button>
            <button
              onClick={() => setActiveSection(Math.min(sections.length - 1, activeSection + 1))}
              disabled={activeSection === sections.length - 1}
              className="flex items-center gap-2 px-6 py-3 bg-purple-600 text-white rounded-lg font-bold disabled:opacity-50"
            >
              –î–∞–ª–µ–µ
              <ChevronRight size={20} />
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

export default WhileLesson;