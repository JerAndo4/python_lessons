import React from 'react';
import { BrowserRouter, Routes, Route, Link, useNavigate } from 'react-router-dom';
import { BookOpen, ArrowLeft, Home } from 'lucide-react';
import WhileLesson from './components/WhileLesson';
import ListsLesson from './components/ListsLesson';

// –ß–¢–û: –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–æ —Å–ø–∏—Å–∫–æ–º —É—Ä–æ–∫–æ–≤
// –ó–ê–ß–ï–ú: –í—ã–±–æ—Ä —É—Ä–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
function HomePage() {
  const navigate = useNavigate();

  const lessons = [
    {
      id: 'while',
      title: '–¶–∏–∫–ª while',
      icon: 'üîÑ',
      description: '–ü–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ –∫–æ–¥–∞ –ø–æ–∫–∞ —É—Å–ª–æ–≤–∏–µ –∏—Å—Ç–∏–Ω–Ω–æ',
      difficulty: '–°—Ä–µ–¥–Ω–∏–π',
      topics: ['break', 'continue', '—Ñ–ª–∞–≥–∏', '–≤–ª–æ–∂–µ–Ω–Ω—ã–µ —Ü–∏–∫–ª—ã'],
      path: '/while'
    },
    {
      id: 'lists',
      title: '–°–ø–∏—Å–∫–∏ (list)',
      icon: 'üìö',
      description: '–•—Ä–∞–Ω–µ–Ω–∏–µ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
      difficulty: '–ù–∞—á–∞–ª—å–Ω—ã–π',
      topics: ['–∏–Ω–¥–µ–∫—Å—ã', '–º–µ—Ç–æ–¥—ã', '—Å—Ä–µ–∑—ã', '–ø–µ—Ä–µ–±–æ—Ä'],
      path: '/lists'
    }
    // –ß–¢–û: –°—é–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ —É—Ä–æ–∫–∏
    // –ö–ê–ö: –ü—Ä–æ—Å—Ç–æ –∫–æ–ø–∏—Ä—É–π –±–ª–æ–∫ –≤—ã—à–µ –∏ –º–µ–Ω—è–π –¥–∞–Ω–Ω—ã–µ
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 p-6">
      <div className="max-w-6xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="bg-white rounded-2xl shadow-lg p-8 mb-8">
          <div className="flex items-center justify-center gap-3 mb-4">
            <BookOpen size={40} className="text-purple-600" />
            <h1 className="text-4xl font-bold text-purple-600">
              Python –¥–ª—è –¥–µ—Ç–µ–π
            </h1>
          </div>
          <p className="text-center text-gray-600 text-lg">
            –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —É—Ä–æ–∫–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è 4 –∫–ª–∞—Å—Å–∞
          </p>
        </div>

        {/* –°–ø–∏—Å–æ–∫ —É—Ä–æ–∫–æ–≤ */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
          {lessons.map((lesson) => (
            <div
              key={lesson.id}
              onClick={() => navigate(lesson.path)}
              className="bg-white rounded-2xl shadow-lg p-6 hover:shadow-xl transition transform hover:scale-105 cursor-pointer"
            >
              {/* –ò–∫–æ–Ω–∫–∞ –∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ */}
              <div className="flex items-center gap-4 mb-4">
                <div className="text-6xl">{lesson.icon}</div>
                <div className="flex-1">
                  <h2 className="text-2xl font-bold text-purple-600">
                    {lesson.title}
                  </h2>
                  <span className={`inline-block px-3 py-1 rounded-full text-sm mt-2 ${
                    lesson.difficulty === '–ù–∞—á–∞–ª—å–Ω—ã–π' 
                      ? 'bg-green-100 text-green-700'
                      : 'bg-yellow-100 text-yellow-700'
                  }`}>
                    {lesson.difficulty}
                  </span>
                </div>
              </div>

              {/* –û–ø–∏—Å–∞–Ω–∏–µ */}
              <p className="text-gray-600 mb-4">{lesson.description}</p>

              {/* –¢–µ–º—ã —É—Ä–æ–∫–∞ */}
              <div className="flex flex-wrap gap-2">
                {lesson.topics.map((topic, idx) => (
                  <span
                    key={idx}
                    className="bg-purple-100 text-purple-700 px-3 py-1 rounded-lg text-sm"
                  >
                    {topic}
                  </span>
                ))}
              </div>

              {/* –ö–Ω–æ–ø–∫–∞ */}
              <button className="w-full mt-4 bg-purple-600 text-white py-3 rounded-lg font-bold hover:bg-purple-700 transition">
                –ù–∞—á–∞—Ç—å —É—Ä–æ–∫ ‚Üí
              </button>
            </div>
          ))}
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="bg-white rounded-2xl shadow-lg p-6 mt-8">
          <div className="grid grid-cols-3 gap-4 text-center">
            <div>
              <div className="text-3xl font-bold text-purple-600">{lessons.length}</div>
              <div className="text-gray-600">–£—Ä–æ–∫–æ–≤</div>
            </div>
            <div>
              <div className="text-3xl font-bold text-green-600">
                {lessons.reduce((acc, l) => acc + l.topics.length, 0)}
              </div>
              <div className="text-gray-600">–¢–µ–º</div>
            </div>
            <div>
              <div className="text-3xl font-bold text-blue-600">10</div>
              <div className="text-gray-600">–ó–∞–¥–∞—á</div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

// –ß–¢–û: –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è —É—Ä–æ–∫–∞ —Å –∫–Ω–æ–ø–∫–æ–π –≤–æ–∑–≤—Ä–∞—Ç–∞
// –ó–ê–ß–ï–ú: –ß—Ç–æ–±—ã –∏–∑ –ª—é–±–æ–≥–æ —É—Ä–æ–∫–∞ –º–æ–∂–Ω–æ –±—ã–ª–æ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
function LessonWrapper({ children }) {
  const navigate = useNavigate();

  return (
    <div className="relative">
      {/* –ö–Ω–æ–ø–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞ –≥–ª–∞–≤–Ω—É—é */}
      <button
        onClick={() => navigate('/')}
        className="fixed top-4 left-4 z-50 bg-white shadow-lg text-purple-600 px-4 py-2 rounded-lg font-bold hover:bg-purple-50 transition flex items-center gap-2"
      >
        <ArrowLeft size={20} />
        –ö —É—Ä–æ–∫–∞–º
      </button>
      {children}
    </div>
  );
}

// –ß–¢–û: –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
// –ó–ê–ß–ï–ú: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—É—Ç–∏–Ω–≥–∞ –º–µ–∂–¥—É —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º–∏
function App() {
  return (
    <BrowserRouter basename={process.env.PUBLIC_URL}>
      <Routes>
        {/* –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ */}
        <Route path="/" element={<HomePage />} />
        
        {/* –£—Ä–æ–∫: –¶–∏–∫–ª while */}
        <Route 
          path="/while" 
          element={
            <LessonWrapper>
              <WhileLesson />
            </LessonWrapper>
          } 
        />
        
        {/* –£—Ä–æ–∫: –°–ø–∏—Å–∫–∏ */}
        <Route 
          path="/lists" 
          element={
            <LessonWrapper>
              <ListsLesson />
            </LessonWrapper>
          } 
        />

        {/* –ß–¢–û: –°—é–¥–∞ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –Ω–æ–≤—ã–µ –º–∞—Ä—à—Ä—É—Ç—ã */}
        {/* –ö–ê–ö: –°–∫–æ–ø–∏—Ä—É–π –±–ª–æ–∫ Route –≤—ã—à–µ –∏ –∏–∑–º–µ–Ω–∏ path + –∫–æ–º–ø–æ–Ω–µ–Ω—Ç */}
        
        {/* 404 - —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ */}
        <Route 
          path="*" 
          element={
            <div className="min-h-screen bg-gradient-to-br from-blue-50 to-purple-50 flex items-center justify-center">
              <div className="bg-white rounded-2xl shadow-lg p-8 text-center">
                <div className="text-6xl mb-4">‚ùå</div>
                <h1 className="text-3xl font-bold text-gray-800 mb-4">–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</h1>
                <Link 
                  to="/"
                  className="inline-block bg-purple-600 text-white px-6 py-3 rounded-lg font-bold hover:bg-purple-700"
                >
                  <Home size={20} className="inline mr-2" />
                  –í–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞ –≥–ª–∞–≤–Ω—É—é
                </Link>
              </div>
            </div>
          } 
        />
      </Routes>
    </BrowserRouter>
  );
}

export default App;